version: '3.7'

services:
  db:
    container_name: ${SQL_HOST}
    image: postgres
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DB}
      - POSTGRES_PORT=${SQL_PORT}
    volumes:
      - ./database/:/var/lib/postgresql/data/
    expose:
      - ${SQL_PORT}
    restart: always
    privileged: true


  web:
    container_name: ${BACKEND_NAME}
    build: ./signalmanager
    env_file:
      - ./.env
    volumes:
      - ./signalmanager:/usr/src/app:rw
#    expose:
#      - ${WEB_HTTP_INTERNAL}
    ports:
      - 127.0.0.1:${WEB_HTTP_PORT}:${WEB_HTTP_INTERNAL}
    privileged: true
    depends_on:
      - db

  task_q:
    container_name: ${BACKEND_NAME}_q
    build: 
      context: ./signalmanager
      dockerfile: Dockerfile-q
    env_file:
      - ./.env
    volumes:
      - ./database/:/var/lib/postgresql/data/
    depends_on:
      - web
      - db
  task_mnt:
    container_name: ${BACKEND_NAME}_mnt
    build: 
      context: ./signalmanager
      dockerfile: Dockerfile-mnt
    volumes:
      - ./database/:/var/lib/postgresql/data/
    env_file:
      - ./.env
    depends_on:
      - web
      - db


#volumes:
#  postgres_data:
#    name: ${POSTGRES_VOLUME}

networks:
  default:
    name: signal_manager_network
    driver: bridge
